package com.library.view.devolution;

import com.library.controller.DevolutionController;
import com.library.exceptions.DateBeforeLoanDateException;
import com.library.exceptions.UninformedParameterException;
import com.library.model.entities.Devolution;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;


public class UpdateDevolutionScreen extends javax.swing.JInternalFrame {
    private final Devolution devolution;
    private final DevolutionController devolutionController;
    
    public UpdateDevolutionScreen(Devolution devolution, DevolutionController devolutionController) {
        this.devolution = devolution;
        this.devolutionController = devolutionController;
        initComponents();
        txtTrafficTicket.setText(Double.toString(devolution.getTrafficTicket()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtReturnDate = new javax.swing.JTextField();
        checkBoxCurrentDate = new javax.swing.JCheckBox();
        btnUpdate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTrafficTicket = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Atualizar Devolução");
        setPreferredSize(new java.awt.Dimension(469, 469));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/return_5597043.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Data de retorno:");

        checkBoxCurrentDate.setText("Data atual");
        checkBoxCurrentDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxCurrentDateActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Multa:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtTrafficTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkBoxCurrentDate)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkBoxCurrentDate)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTrafficTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(btnUpdate)
                .addGap(17, 17, 17))
        );

        setBounds(0, 0, 469, 469);
    }// </editor-fold>//GEN-END:initComponents
     
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String txtReturnDate = this.txtReturnDate.getText();
        String txtTrafficTicket = this.txtTrafficTicket.getText();
        try {
            if (!(txtReturnDate.isEmpty() && txtTrafficTicket.isEmpty())) {
                LocalDate returnDate = LocalDate.parse(txtReturnDate, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                double trafficTicket = Double.parseDouble(txtTrafficTicket);
                devolutionController.updateDevolution(devolution, returnDate, trafficTicket);
                JOptionPane.showMessageDialog(this, "Devolução atualizada com sucesso!");
                this.dispose();
                return;
            }
            JOptionPane.showMessageDialog(this, "Preencha as informações corretamente!");
        } catch (DateBeforeLoanDateException | UninformedParameterException | NumberFormatException | DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void checkBoxCurrentDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxCurrentDateActionPerformed
        LocalDate currentDate = LocalDate.now();
        txtReturnDate.setText(currentDate.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
    }//GEN-LAST:event_checkBoxCurrentDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox checkBoxCurrentDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtReturnDate;
    private javax.swing.JTextField txtTrafficTicket;
    // End of variables declaration//GEN-END:variables
}
